<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    
    <modelVersion>4.0.0</modelVersion>

    <groupId>uk.ac.ebi.interpro.scan</groupId>
    <artifactId>interproscan-model</artifactId>
	<version>1.0-SNAPSHOT</version>

    <packaging>jar</packaging>

    <name>InterProScan Domain Model</name>    
    <description>InterProScan Domain Model</description>
    <url>http://www.ebi.ac.uk/interpro/</url>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <distributionManagement>
        <repository>
            <id>ebi-repo</id>
            <name>EBI Repository</name>
            <url>scp://lobster.ebi.ac.uk/homes/maven/public_html/m2repo</url>
        </repository>
        <snapshotRepository>
            <uniqueVersion>false</uniqueVersion>
            <id>ebi-repo-snapshots</id>
            <name>EBI Snapshots Repository</name>
            <url>scp://lobster.ebi.ac.uk/homes/maven/public_html/m2repo_snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <scm>
        <connection>http://interproscan.googlecode.com/svn/</connection>
        <url>http://interproscan.googlecode.com/svn/</url>
    </scm>

    <organization>
        <name>EMBL - European Bioinformatics Institute</name>
        <url>http://www.ebi.ac.uk/</url>
    </organization>
    
    <properties>
        <spring.version>2.5.6</spring.version>
        <spring.oxm.version>1.5.7</spring.oxm.version>
    </properties>    

    <dependencies>

        <!-- JAXB API -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.1</version>
        </dependency>

        <!-- JPA -->
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.14</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.1</version>
        </dependency>

        <!-- Apache Commons -->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.4</version>
        </dependency>

        <!--
        === All dependcies below here are TEST scope only. ===
        -->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>                

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <!-- Note: cannot go beyond version 4.4 as incompatible with spring-test. Will be fixed in Spring 3.0 -->
            <version>4.4</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>xmlunit</groupId>
            <artifactId>xmlunit</artifactId>
            <version>1.2</version>
            <scope>test</scope>
        </dependency>

        <!-- JAXB tests -->

        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>2.1.9</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.ws</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${spring.oxm.version}</version>
            <scope>test</scope>            
        </dependency>

        <dependency>
            <groupId>org.springframework.ws</groupId>
            <artifactId>spring-oxm-tiger</artifactId>
            <version>${spring.oxm.version}</version>
            <scope>test</scope>            
        </dependency>

        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
            <version>1.6.3</version>
            <scope>test</scope>
        </dependency>       

        <!-- JPA tests -->

        <dependency>
            <groupId>uk.ac.ebi.interpro.scan</groupId>
            <artifactId>generic-jpa-dao</artifactId>
            <version>0.1-SNAPSHOT</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>3.4.0.GA</version>
            <scope>test</scope>
        </dependency>        

        <dependency>
            <groupId>hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>1.8.0.10</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.10</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.5.2</version>
            <scope>test</scope>
        </dependency>        

    </dependencies>
    
    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources/</directory>
                <includes>
                    <include>persistence.xml</include>
                </includes>
                <filtering>true</filtering>
                <targetPath>META-INF</targetPath>
            </testResource>
            <testResource>
                <directory>src/test/resources/</directory>
                <excludes>
                    <exclude>persistence.xml</exclude>
                </excludes>
                <filtering>false</filtering>
            </testResource>
        </testResources>
        <plugins>
            <!-- Use Java 6 language features -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <!-- JavaDocs (generate: mvn javadoc:javadoc, package: mvn javadoc:jar) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <overview />
                </configuration>
            </plugin>
            <!-- Create JAR of source files (source:jar, source:test-jar) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <!--configuration>
                    <finalName>filename-of-generated-jar-file</finalName>
                    <attach>false</attach>
                    </configuration-->
            </plugin>
            <!--
                schemagen: generate XML schema from source code using Ant task
                Notes:
                * Maven schemagen plugin is a year out of date (as of October 2008) so cannot use
                  http://www.nabble.com/maven-jaxb-schemagen-plugin-additional-hand-written-schema-import-td18921720.html
                * Considered exec:java on com.sun.tools.jxc.SchemaGenerator but did not offer enough control:
                  java com.sun.tools.jxc.SchemaGenerator -cp target/classes/
                                                         src/main/java/uk/ac/ebi/impact/model/ModelDatabaseRelease.java                
             -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-xml-schema</id>
                        <phase>compile</phase>
                        <configuration>
                            <tasks>
                                <property name="project.build.schema.dir" value="${project.build.directory}/schemas/"/>
                                <mkdir dir="${project.build.schema.dir}"/>
                                <taskdef name="schemagen"
                                         classname="com.sun.tools.jxc.SchemaGenTask"
                                         classpathref="maven.plugin.classpath"/>
                                <schemagen srcdir="${project.build.sourceDirectory}"
                                           destdir="${project.build.schema.dir}"
                                           classpathref="maven.compile.classpath">
                                    <!-- Following does not work: -->
                                    <!--schema namespace="http://www.ebi.ac.uk/interpro/scan/model" file="${project.artifactId}.xsd" /-->
                                </schemagen>
                                <!-- 'schema' child element does not work, so have to rename file by hand -->
                                <move file="${project.build.schema.dir}/schema1.xsd"
                                      tofile="${project.build.schema.dir}/${project.artifactId}.xsd"/>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-xjc</artifactId>
                        <version>2.1.8</version>
                    </dependency>
                    <!-- com.sun.mirror.apt.AnnotationProcessorFactory required by schemagen task -->
                    <dependency>
                        <groupId>com.sun</groupId>
                        <artifactId>tools</artifactId>
                        <version>1.5.0</version>
                        <scope>system</scope>
                        <systemPath>${java.home}/../lib/tools.jar</systemPath>
                    </dependency>
                </dependencies>
            </plugin>
            <!--plugin>
                <groupId>com.sun.tools.jxc.maven2</groupId>
                <artifactId>maven-jaxb-schemagen-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-xml-schema</id>
                        <phase>compile</phase>
                    </execution>
                </executions>
            </plugin-->
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- Copy this profile into your own [HOME]/.m2/settings.xml file, rename and
             edit appropriately. Use with "mvn -P profile-id GOAL" -->
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <test.database.driver>org.hsqldb.jdbcDriver</test.database.driver>
                <test.connection.url>jdbc:hsqldb:mem:mem:testmodel</test.connection.url>
                <test.username>sa</test.username>
                <test.password></test.password>
                <test.hibernate.dialect>org.hibernate.dialect.HSQLDialect</test.hibernate.dialect>
                <test.hibernate.show_sql>true</test.hibernate.show_sql>
                <test.hibernate.format_sql>true</test.hibernate.format_sql>
                <test.hibernate.hbm2ddl.auto>create</test.hibernate.hbm2ddl.auto>
            </properties>
        </profile>
    </profiles>
    
</project>
