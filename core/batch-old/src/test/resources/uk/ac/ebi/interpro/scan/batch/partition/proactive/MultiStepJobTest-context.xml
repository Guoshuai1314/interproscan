<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.0.xsd">
    
    <import resource="application-context.xml"/>
    <import resource="partition-context.xml"/>
    <import resource="step-context.xml"/>    
    <import resource="../../item/FastaLineAggregatorTest-context.xml"/>

    <!-- Multi-step job to split FASTA into N chunks, run HMMER on each chunk and merge the results (see IBU-985) -->
    <batch:job id="multiStepHmmerJob">
        <!-- Create FASTA files in batches of N sequences -->
        <batch:step id="generateFasta" next="runHmmer">
            <batch:tasklet>
                <batch:chunk reader="fastaReader"
                             writer="fastaWriter"
                             commit-interval="${multistep.fasta.commit-interval}"/>
            </batch:tasklet>
        </batch:step>
        <!-- Run HMMER -->
        <batch:step id="runHmmer" parent="partitionStep:master" next="mergeHmm"/>
        <!-- Merge HMM results into single file -->
        <batch:step id="mergeHmm">
            <batch:tasklet>
                <batch:chunk reader="hmmReader" processor="" writer="hmmWriter" commit-interval="10"/>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <!-- JobParameters -->
    <bean id="jobParameters" class="org.springframework.batch.core.JobParameters">
        <constructor-arg>
            <map>
                <entry key="sequences" value-ref="sequencesParam"/>
                <entry key="model"     value-ref="modelParam"/>
            </map>
        </constructor-arg>
    </bean>
    <bean id="sequencesParam" class="org.springframework.batch.core.JobParameter">
        <constructor-arg type="java.lang.String" value="file:${multistep.fasta.output}.*"/>
    </bean>
    <bean id="modelParam" class="org.springframework.batch.core.JobParameter">
        <constructor-arg type="java.lang.String" value="${hmm.dir}/${multistep.model.file}"/>
    </bean>

    <!-- TaskExectutor -->
    <bean id="partitionHandler" class="org.springframework.batch.core.partition.support.TaskExecutorPartitionHandler">
        <property name="step" ref="tigrfamStep"/>
    </bean>         

    <bean id="fastaReader" class="uk.ac.ebi.interpro.scan.batch.item.FastaFileItemReader">
        <property name="resource">
            <bean class="org.springframework.core.io.FileSystemResource">
                <constructor-arg value="${multistep.fasta.input}"/>
            </bean>
        </property>
    </bean>

    <bean id="fastaWriter" class="org.springframework.batch.item.file.MultiResourceItemWriter">
        <property name="delegate">
            <bean class="org.springframework.batch.item.file.FlatFileItemWriter">
                <property name="lineAggregator" ref="fastaLineAggregator"/>
            </bean>
        </property>
        <property name="resource">
            <bean class="org.springframework.core.io.FileSystemResource">
                <constructor-arg value="${multistep.fasta.output}"/>
            </bean>
        </property>
        <property name="itemCountLimitPerResource" value="1"/>
    </bean>

    <!-- Must step scope="step" otherwise will try to find resources before they've been created -->
    <bean id="hmmReader" scope="step" class="org.springframework.batch.item.file.MultiResourceItemReader">
		<property name="delegate">
			<bean class="org.springframework.batch.item.file.FlatFileItemReader">
                <property name="lineMapper">
					<bean class="org.springframework.batch.item.file.mapping.PassThroughLineMapper"/>
				</property>
            </bean>
        </property>
        <!-- Must add file: prefix here, otherwise assumes resources are on classpath -->
        <property name="resources" value="file:${multistep.merge.input}"/>
    </bean>

    <bean id="hmmWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator"/>
        </property>
        <property name="resource">
            <bean class="org.springframework.core.io.FileSystemResource">
                <constructor-arg value="${multistep.merge.output}"/>
            </bean>
        </property>
    </bean>   

</beans>    
