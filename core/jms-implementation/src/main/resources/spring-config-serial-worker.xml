<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <!-- Import common beans -->
    <import resource="spring-config-common.xml"/>
    <import resource="persistence-config.xml"/>
    <import resource="spring-config-jobs.xml"/>

    <bean id="workerManager" class="uk.ac.ebi.interpro.scan.jms.worker.InterProScanMonitor">
        <property name="workerManagerTopicName" value="jms.topic.${worker.manager.topic}"/>
        <property name="workerManagerResponseQueueName" value="jms.queue.${worker.manager.response.queue}"/>
        <property name="jmsBrokerHostName" ref="jmsBrokerHostName"/>
        <property name="jmsBrokerPort" ref="jmsBrokerHostPort"/>
        <property name="jobs" ref="jobs"/>
    </bean>

    <bean id="serialWorker" class="uk.ac.ebi.interpro.scan.jms.worker.InterProScanWorker">
        <!-- The serial worker processes one job after another and should
        be closed down explicitly. -->
        <property name="stopWhenIdle" value="false"/>
        <!-- This single serial worker listens on the job submission queue
         for serial jobs, which do not get pushed on to the parellel workers queue.
         -->
        <property name="jmsMessageSelector" value="parallel = FALSE"/>
        <property name="receiveTimeoutMillis" value="60000"/>
        <property name="jobRequestQueueName" value="jms.queue.${job.submission.queue}"/>
        <property name="jobResponseQueueName" value="jms.queue.${worker.job.response.queue}"/>
        <property name="jmsBrokerHostName" ref="jmsBrokerHostName"/>
        <property name="jmsBrokerPort" ref="jmsBrokerHostPort"/>
        <property name="workerManager" ref="workerManager" />
        <property name="jobs" ref="jobs"/>
        <property name="serialWorker" value="true"/>
    </bean>

    

</beans>
