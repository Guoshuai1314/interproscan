<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <!-- Import common beans -->
    <import resource="jobPfamA-context.xml"/>
    <import resource="jobPhobius-context.xml"/>
    <!--<import resource="jobGene3d-context.xml"/>-->
    <import resource="jobPrints-context.xml"/>
    <import resource="jobCoils-context.xml"/>
    <import resource="../persistence/persistence-config-context.xml"/>

    <import resource="../uapro-db-access-context.xml"/>


    <bean id="jobs" class="uk.ac.ebi.interpro.scan.management.model.Jobs">
        <property name="jobList">
            <list>
                <ref bean="jobLoadFromFasta"/>
                <ref bean="jobLoadFromUniParc"/>
                <ref bean="jobWriteOutput"/>

                <!-- Analyses -->
                <ref bean="jobPfamA"/>
                <ref bean="jobPhobius"/>
                <!--<ref bean="jobGene3d"/>-->
                <ref bean="jobPRINTS"/>
                <ref bean="jobCoils"/>
            </list>
        </property>
        <property name="baseDirectoryTemporaryFiles" value="${temporary.file.directory}"/>
    </bean>


    <!-- String properties common to all jobs -->
    <bean id="fastaFileNameTemplate" class="java.lang.String">
        <constructor-arg value="[PROTSTART]_[PROTEND].fasta"/>
    </bean>

    <bean id="rawAnalaysisOutputFileTemplate" class="java.lang.String">
        <constructor-arg value="[PROTSTART]_[PROTEND].raw.out"/>
    </bean>


    <!--<import resource="all-jobs-context.xml"/>-->

    <!-- ######################## JOB: job-load-from-fasta ############################  -->
    <bean id="jobLoadFromFasta" class="uk.ac.ebi.interpro.scan.management.model.Job">
        <property name="description" value="Load proteins from a fasta file and create required JobInstance objects"/>
        <property name="analysis" value="false"/>
    </bean>


    <!-- STEP 1 -->
    <bean id="stepLoadFromFasta"
          class="uk.ac.ebi.interpro.scan.management.model.implementations.stepInstanceCreation.proteinLoad.FastaFileLoadStep">
        <property name="job" ref="jobLoadFromFasta"/>
        <!-- This step has no dependencies, so will be scheduled first for its associated job. -->
        <property name="stepDescription"
                  value="Load proteins from a fasta file and create required JobInstance objects"/>
        <property name="createStepInstancesForNewProteins" value="false"/>
        <property name="retries" value="2"/>
        <property name="serialGroup" value="LOAD_PROTEINS"/>
        <property name="fastaFileLoader" ref="fastaFileLoader"/>
        <property name="jobs" ref="jobs"/>
        <property name="stepInstanceDAO" ref="stepInstanceDAO"/>
    </bean>


    <!-- !!!!!!!!!!!!!!!!!!!!! JOB-END: jobLoadFromFasta !!!!!!!!!!!!!!!!!!!!!!!!!!!!  -->

    <!-- ######################## JOB: jobLoadFromUniParc ############################  -->
    <bean id="jobLoadFromUniParc" class="uk.ac.ebi.interpro.scan.management.model.Job">
        <property name="description" value="Load proteins from UniParc and create required JobInstance objects"/>
        <property name="analysis" value="false"/>
    </bean>

    <!-- STEP 1 -->
    <bean id="stepLoadFromUniParc"
          class="uk.ac.ebi.interpro.scan.management.model.implementations.stepInstanceCreation.proteinLoad.UniparcProteinLoadStep">
        <property name="job" ref="jobLoadFromUniParc"/>
        <!-- This step has no dependencies, so will be scheduled first for its associated job. -->
        <property name="stepDescription" value="Load proteins from UniParc and create required JobInstance objects"/>
        <property name="createStepInstancesForNewProteins" value="false"/>
        <property name="retries" value="2"/>
        <property name="serialGroup" value="LOAD_PROTEINS"/>
        <property name="uniparcLoader" ref="uniparcLoader"/>
    </bean>

    <!-- ######################## JOB: writeOut ############################  -->
    <bean id="jobWriteOutput" class="uk.ac.ebi.interpro.scan.management.model.Job">
        <property name="description" value="Write output for proteins when analysis finished"/>
        <property name="analysis" value="false"/>
    </bean>

    <!-- STEP 1 -->
    <bean id="stepWriteOutput" class="uk.ac.ebi.interpro.scan.management.model.implementations.WriteOutputStep">
        <property name="job" ref="jobWriteOutput"/>
        <!-- This step is made dependent on the steps created by the protein load listener -->
        <property name="stepDescription" value="Write output for completed analysis"/>
        <property name="createStepInstancesForNewProteins" value="false"/>
        <property name="retries" value="0"/>
        <!--<property name="serialGroup"                        value="LOAD_PROTEINS"/>-->
        <property name="proteinDAO" ref="proteinDAO"/>
    </bean>


    <!-- !!!!!!!!!!!!!!!!!!!!! JOB-END: jobLoadFromUniParc !!!!!!!!!!!!!!!!!!!!!!!!!!!!  -->

    <!-- ######################## Dependencies ############################  -->
    <bean id="fastaFileLoader" class="uk.ac.ebi.interpro.scan.business.sequence.fasta.LoadFastaFileImpl">
        <property name="proteinLoader" ref="proteinLoader"/>
    </bean>

    <bean id="precalculatedLookup" class="uk.ac.ebi.interpro.scan.business.sequence.PrecalculatedProteinLookup">
        <constructor-arg value="data/precalculated.zip"/>
    </bean>

    <bean id="proteinLoader" class="uk.ac.ebi.interpro.scan.business.sequence.ProteinLoader">
        <property name="proteinInsertBatchSize" value="500"/>
        <!-- MUST NOT EXCEED 1000 -->
        <property name="proteinDAO" ref="proteinDAO"/>
        <property name="proteinLookup" ref="precalculatedLookup"/>
    </bean>

    <bean id="proteinLoadListener"
          class="uk.ac.ebi.interpro.scan.management.model.implementations.stepInstanceCreation.proteinLoad.StepCreationProteinLoadListener">
        <property name="stepInstanceDAO" ref="stepInstanceDAO"/>
        <property name="completionJob" ref="jobWriteOutput"/>
        <property name="jobs" ref="jobs"/>
    </bean>


    <bean id="uniparcLoader" class="uk.ac.ebi.interpro.scan.business.sequence.uniparcdb.LoadUniParcFromDBImpl">

        <property name="jdbcTemplate" ref="targetJdbcTemplate"/>
        <property name="rowCallbackHandlerTemplate" ref="rowCallbackHandlerTemplate"/>
        <property name="maximumProteins" value="${ebi.uniparc.protein.load.size}"/>
        <property name="xrefDao" ref="xrefDAO"/>
    </bean>

    <bean id="rowCallbackHandlerTemplate"
          class="uk.ac.ebi.interpro.scan.business.sequence.uniparcdb.UniParcDBRowCallbackHandler">
        <property name="proteinLoader" ref="proteinLoader"/>
        <property name="proteinLoadListener" ref="proteinLoadListener"/>
    </bean>

</beans>

